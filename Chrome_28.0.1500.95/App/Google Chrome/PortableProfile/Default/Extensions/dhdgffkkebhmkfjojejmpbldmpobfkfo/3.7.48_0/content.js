(function(){if(void 0!==window._background)console.warn('content: Stop here, cause a second Tampermonkey instance was detected!\nThis can be caused by using "document.write" at Userscripts.\nSee https://code.google.com/p/chromium/issues/detail?id=253388 for more information');else{var r={_background:!0,_webRequest:{},Converter:null,Eventing:null,D:!1,CV:!1,USV:!1};(function(){for(var b in r)r.hasOwnProperty(b)&&(window[b]=r[b])})();var J=function(){var b={},a={webkitStorageInfo:!0,JSLINT:!0},c=Object.getOwnPropertyNames(window),
d;d=window;for(var e=[];d=Object.getPrototypeOf(d);)e=e.concat(Object.getOwnPropertyNames(d));d=e;for(var e=0,h=null;h=d[e];e++)a[h]||r[h]||(2<h.length&&"on"===h.substr(0,2)?b[h]={proto:!0,event:!0}:b[h]={proto:!0});for(e=0;h=c[e];e++)a[h]||r[h]||b[h]||(b[h]={window:!0});return b};Registry.require("prepare");Registry.require("xmlhttprequest");Registry.require("convert");Registry.require("helper");var B=Registry.prepare(),w=Registry.get("xmlhttprequest"),K=w.run,m=Registry.get("helper"),s=m.clean;
Converter=Registry.get("convert");var t=null,u=null,g={safeContext:B.RUNTIME.ALLOWS_SAFE_CONTEXT,scriptBlocker:!1,proxy:!1},v=null,q=!1,x=!1,C=!1,y=!1,E=function(){D&&console.log("content: detected DOMContentLoaded "+Eventing.contextId);C=!0;q&&f.sendMessage("TMwin.domContentLoaded = true; if (typeof runAllLoadListeners !== 'undefined') runAllLoadListeners();")},F=function(b){y||(D&&console.log("content: first DOMNodeInserted "+Eventing.contextId),y=!0)},f={responses:{},initstate:0,sendMessage:function(b){var a=
"";if(0==this.initstate)this.initstate=1;else if(1==this.initstate){a+="var V = false;\nvar ENV = false;\n";a+="var TS = false;\n";a+="var D = "+(D?"true":"false")+";\n";a+="var Converter = "+m.serialize(Converter)+";\n";a+="var TMwin = { backup: {}, use: "+JSON.stringify(g)+", windowProps: "+JSON.stringify(J())+", isIncognito: "+chrome.extension.inIncognitoContext+" };\n";a+="var TMJSON = JSON;\n";a+="var _background = false;\n";a+="var console = window['console'];\n";a+="var JSON = window['JSON'];\n";
a+="function JSONcheck() {\n";a+="        if (!JSON.parse || JSON.parse != 'function parse() { [native code] }') {\n";a+="              if (TMJSON && TMJSON.parse == 'function parse() { [native code] }') {\n";a+="                  JSON = TMJSON;\n";a+="                  console.log('page: use JSON backup');\n";a+="              } else {\n";a+="                  JSON = window.JSON;\n";a+="                  console.log('page: use JSON fallback');\n";a+="              }\n";a+="        }\n";a+="};\n";
a+="JSONcheck();\n";a+="var Eventing = ("+m.serialize(G).replace("___eval___","eval")+")();\n";a+="var TM_do = "+m.serialize(L).replace("___eval___","eval")+";\n";a+="Eventing.init('"+Eventing.contextId+"');\n";a+="function cleanup(evt) {\n";a+="    Eventing.cleanup();\n";a+="    window.removeEventListener('unload', cleanup, false);\n";a+="    delete Eventing;\n";a+="    delete TMJSON;\n";a+="    delete TMwin;\n";a+="    delete Converter;\n";a+="};\n";a+="window.addEventListener('unload', cleanup, false);\n";
if(g.safeContext)window.eval("(function TM_mother() { "+a+"\n"+b+"})();");else{var c=document.createElement("script");c.textContent="(function TM_mother() { "+a+"\n"+b+"})();";c.setAttribute("name","TM_internal");(document.head||document.body||document.documentElement||document).appendChild(c);c.parentNode.removeChild(c)}this.initstate=2}else 2==this.initstate&&Eventing.fireEvent(b)},getResponseId:function(b){var a=0;if(b){for(;0==a||void 0!=f.responses[a];)a=m.createUUID();f.responses[a]=b}return a},
runResponse:function(b,a){for(var c in f.responses)if(c==b){var d="";try{if(d=JSON.parse(Converter.decode(a)),f.responses[c])f.responses[c](d);else console.log("Warn: content: responseId "+c+" is undefined!!!")}catch(e){console.log("content: Json parse error (runResponse):"+e+"\n"+a)}f.responses[c]=null;return}console.log("WARN: responseId "+b+" not found!")}},n={ports:{},log:function(b){_background?console.log("content: "+b):Eventing.fireEvent({fn:"log",args:"page: "+b})},onContentResponse:function(b,
a,c,d){_background?f.runResponse(c,Converter.encode(d)):Eventing.fireEvent({fn:"onContentResponse",args:arguments})},onResponse:function(b,a,c,d){if(_background)try{var e=Converter.encode(d);f.sendMessage("if (TMwin.chromeEmu) TMwin.chromeEmu.runResponse('"+c+"', \""+e+'")')}catch(h){console.log("Error: processing onResponse")}else Eventing.fireEvent({fn:"onResponse",args:arguments})},onConnectResponse:function(b,a,c,d){if(_background)try{var e=Converter.encode(d);f.sendMessage("if (TMwin.chromeEmu) TMwin.chromeEmu.runConnectResponse('"+
c+"', \""+e+'")')}catch(h){console.log("Error: processing onConnectResponse")}else Eventing.fireEvent({fn:"onConnectResponse",args:arguments})},onContentRequest:function(b,a,c){_background?b.id&&this.id&&b.id!=this.id||(b=Converter.encode(JSON.stringify({sender:a,request:b})),f.sendMessage("if (TMwin.chromeEmu) TMwin.chromeEmu.runContentRequest('"+c+"', \""+b+'", 0);')):console.log("Warn: onContentRequest from non BG not supported")},onMessage:function(b,a,c){_background?b.id&&this.id&&b.id!=this.id||
(b=Converter.encode(JSON.stringify({sender:a,request:b})),f.sendMessage("if (TMwin.chromeEmu) TMwin.chromeEmu.runRequest('"+c+"', \""+b+'", 0)')):console.log("Warn: onMessage from non BG not supported")},runUpdateListener:function(){console.log("WARN: not supported!")},getUrl:function(){console.log("WARN: not supported!")},sendExtensionMessage:function(b,a,c){if(_background){var d=JSON.parse(a);d.responseId=c;chrome.extension.sendMessage(d,function(a){n.onResponse(b,0,c,JSON.stringify(a))});d=null}else Eventing.fireEvent({fn:"sendExtensionMessage",
args:arguments})},sendExtensionConnect:function(b,a,c){if(_background){var d=JSON.parse(a);d.responseId=c;var e=chrome.extension.connect({name:d});e.onMessage.addListener(function(a){n.onConnectResponse(b,0,c,JSON.stringify({onMessage:!0,msg:a}))});e.onDisconnect.addListener(function(a){n.onConnectResponse(b,0,c,JSON.stringify({onDisconnect:!0}));d=null});n.ports[c]=e}else Eventing.fireEvent({fn:"sendExtensionConnect",args:arguments})},sendExtensionPortMessage:function(b,a,c){if(_background){var d=
n.ports[c];if(d){var e=JSON.parse(a);e.responseId=c;d.postMessage(e)}else this.log("Error: sendExtensionPortMessage unable to find port "+c)}else Eventing.fireEvent({fn:"sendExtensionPortMessage",args:arguments})},sendTabsRequest:function(){console.log("WARN: not supported!")},createTab:function(){console.log("WARN: not supported!")},queryTab:function(){console.log("WARN: not supported!")},updateTab:function(){console.log("WARN: not supported!")},onUpdated:function(){console.log("WARN: not supported!")},
getMessage:function(){console.log("WARN: not supported!")},storageKey:function(){console.log("WARN: not supported!")},storageRemoveItem:function(){console.log("WARN: not supported!")},storageSetItem:function(){console.log("WARN: not supported!")},storageGetItem:function(){console.log("WARN: not supported!")},storageLength:function(){console.log("WARN: not supported!")}},L=function(b){var a={},a=_background?g:TMwin.use;if(a.safeContext)return a=null,a="object"===typeof b?JSON.stringify(b):JSON.stringify({method:"eval",
arg:b}),b=document.createEvent("MutationEvent"),b.initMutationEvent(Eventing.eventId+"#"+Eventing.contextId,!1,!1,null,null,null,a,b.ADDITION),document.dispatchEvent(b),b.returnValue;_background?console.log("ERROR: assert(use.safeContext)"):___eval___(b)},M=function(b){var a="document.addEventListener('"+Eventing.eventId+"#"+Eventing.contextId+"', "+function(a){var c=null,b;try{c=JSON.parse(a.attrName);b=window["passenger_"+a.type.replace(/[^#]*#/,"")];if("get"==c.method){for(var f=c.path.split("."),
p=window,k=0;k<f.length;k++)p=p[f[k]];a={};a.value=p[c.name];b["_"+c.id]=a}else if("set"==c.method){f=c.path.split(".");p=window;for(k=0;k<f.length;k++)p=p[f[k]];p[c.name]=b[c.id].value;b["_"+c.id]={}}else if("delete"==c.method){f=c.path.split(".");p=window;for(k=0;k<f.length;k++)p=p[f[k]];delete p[c.name];b["_"+c.id]={}}else"eval"==c.method&&___eval___(c.arg);c.id&&delete b[c.id]}catch(g){}}.toString().replace("___eval___","eval")+", false);\n",c=b.document.createElement("script");c.setAttribute("name",
"TM_internal");c.innerHTML=a;b=b.document;(b.documentElement||b).appendChild(c);c.parentNode.removeChild(c)},N=function(){for(var b=[window.HTMLElement.prototype,document.__proto__],a=0;a<b.length;a++)(function(){var c=b[a];Object.getOwnPropertyDescriptor(c,"wrappedJSObject")||(Object.defineProperties(c,{wrappedJSObject:{get:function(){return this},enumerable:!1,configurable:!0}}),s.push(function(){CV&&console.log("clean: "+m.toType(c)+"[wrappedJSObject]");delete c.wrappedJSObject}))})()},O=function(){var b=
!1;if(!function(){var a=document.createElement("p"),c=!1;a.addEventListener("DOMAttrModified",function(){c=!0},!1);a.setAttribute("class","trigger");return c}())for(var a=[window.HTMLElement.prototype,document.__proto__],c=0;c<a.length;c++){var d=a[c];d.___addEventListener||(d.___addEventListener=d.addEventListener,d.___removeEventListener=d.removeEventListener,d.removeEventListener=function(a,c,b){this.___removeEventListener(a,c,b)},d.addEventListener=function(a,c,d){if("DOMAttrModified"==a&&this.outerHTML){var f=
this.outerHTML.split(">")[0]+" />",k=this,g;g=this.parentNode?this.parentNode:this;var l=function(a,c,b,d){var e=document.createEvent("MutationEvent");e.initMutationEvent("DOMAttrModified",!0,!1,a,b||"",d||"",c,null==b?e.ADDITION:null==d?e.REMOVAL:e.MODIFICATION);a.dispatchEvent(e)};try{(new WebKitMutationObserver(function(a){for(var c in a)if(a.hasOwnProperty(c)){var b=a[c];if(""!=b.attributeName&&b.target){var d=b.oldValue,e=b.target.getAttribute(b.attributeName);d!=e&&l(k,b.attributeName,d,e)}}})).observe(k,
{childList:!1,subtree:!1,attributeOldValue:!0,attributes:!0})}catch(n){var m=function(a,c){void 0==c&&(c={});var b=a.replace(/\\\"/g,"").replace(/".*?"/g,"").replace(/^<[a-zA-b0-9]* |>$/g,"").split(" "),d;for(d in b)if(b.hasOwnProperty(d)){var e=b[d];"="==e.substr(e.length-1,1)&&(c[e.substr(0,e.length-1)]=null)}return c};b||console.log("content: WARN unable to use MutationObserver -> fallback to DOMSubtreeModified event");b=!0;g.addEventListener("DOMSubtreeModified",function(a){if(a.target==k&&(a=
a.target.outerHTML.split(">")[0]+" />",f!=a)){var c=document.createElement("div");c.innerHTML=f;var c=c.childNodes[0],b=document.createElement("div");b.innerHTML=a;var b=b.childNodes[0],d=m(f,m(a)),e;for(e in d)if(d.hasOwnProperty(e)){var h=c.getAttribute(e),g=b.getAttribute(e);h!=g&&l(k,e,h,g)}f=a}},!0)}}this.___addEventListener(a,c,d)},s.push(function(){d.removeEventListener=d.___removeEventListener;d.addEventListener=d.___addEventListener}))}},G=function(){var b={};["createEvent","dispatchEvent",
"addEventListener","removeEventListener"].forEach(function(a){var d=document[a];b[a]=function(){return d.apply(document,arguments)}});var a={topframe:window.self===window.top,eventId:"TM_do",contextId:null,rEventId:null,sEventId:null,eventSource:null,log:function(a){console.log((_background?"content":"page")+": "+a)},alternativeEventSource:{element:{dispatchEvent:function(a){window.Registry._altEventing||(window.Registry._altEventing={});if(window.Registry._altEventing[a.type])window.Registry._altEventing[a.type](a)},
addEventListener:function(a,b){window.Registry._altEventing||(window.Registry._altEventing={});window.Registry._altEventing[a]=b},removeEventListener:function(a){window.Registry._altEventing||(window.Registry._altEventing={});delete window.Registry._altEventing[a]}},event:{encode:function(a,b){return{type:a,data:b}},decode:function(a){return a.data}}},standardEventSource:{element:{dispatchEvent:function(){return b.dispatchEvent.apply(document,arguments)},addEventListener:function(){return b.addEventListener.apply(document,
arguments)},removeEventListener:function(){return b.removeEventListener.apply(document,arguments)}},event:{encode:function(a,d){var e=b.createEvent("MutationEvent");e.initMutationEvent(a,!1,!1,null,null,null,Converter.encodeR(JSON.stringify(d)),e.ADDITION);return e},decode:function(a){return JSON.parse(Converter.decodeR(a.attrName))}}},init:function(b){a.contextId=b;a.contextId?(b={},_background?(b=g,a.rEventId="TM_toContent",a.sEventId="TM_toPage",a.eventHandler=a.eventHandlerContent):(b=TMwin.use,
a.rEventId="TM_toPage",a.sEventId="TM_toContent",a.eventHandler=a.eventHandlerPage),a.eventSource=b.safeContext?a.alternativeEventSource:a.standardEventSource,a.registerListener()):a.log("Eventing.init() failed!!!")},fireEvent:function(b,d){void 0==d&&(d=a.sEventId+a.contextId);try{var e=a.eventSource.event.encode(d,b);a.eventSource.element.dispatchEvent(e)}catch(f){a.log("Error: fire event "+d+" -> "+JSON.stringify(b)+" "+f)}},registerListener:function(){a.eventSource.element.addEventListener(a.rEventId+
a.contextId,a.eventHandler,!1)},eventHandlerPage:function(b){try{var d=a.eventSource.event.decode(b);try{___eval___(d)}catch(e){console.log("page: Error: processing event! "+e.message+" -> ("+d+")")}}catch(f){a.log("Error: retrieving event! "+f.message),a.log(b)}},eventHandlerContent:function(b){try{var d=a.eventSource.event.decode(b);try{n[d.fn](d.args[0],d.args[1],d.args[2],d.args[3],d.args[4],d.args[5],d.args[6],d.args[7])}catch(e){a.log("Error: processing event ("+d.fn+")! "+e.message)}}catch(f){a.log("Error: retrieving event! "+
f.message),a.log(b)}},cleanup:function(){a.eventSource&&a.eventSource.element.removeEventListener(a.rEventId+a.contextId,a.eventHandler,!1)}};return a};Eventing=new G;var l={init:function(){window.addEventListener("load",l.runHlp,!1);window.addEventListener("DOMNodeInserted",l.runHlp,!1);window.addEventListener("DOMContentLoaded",l.runHlp,!1)},runHlp:function(b){q||(document.head||document.body?(l.cleanupHlp(),l.run()):void 0==b&&window.setTimeout(l.runHlp,100))},run:function(){if(!q&&u&&t){var b;
b=""+("var logLevel = "+v+";\n");var a="var tmCE = "+m.serialize(n)+";\nvar Event = function() {};\n",c="var TM_context_id = '"+Eventing.contextId+"';\n",d="";f.sendMessage("console.log('Tampermonkey started');");C?(d+="TMwin.loadHappened = true;\nTMwin.domContentLoaded = true;\n",D&&console.log("content: Start ENV with DOMContentLoaded "+Eventing.contextId)):y&&(d="TMwin.loadHappened = true;\n",D&&console.log("content: Start ENV with loadHappened "+Eventing.contextId));f.sendMessage("(function () { "+
b+c+""+a+t+u+d+"})();");t=u=null;q=!0}},cleanupHlp:function(){q||(window.removeEventListener("load",l.runHlp,!1),window.removeEventListener("DOMNodeInserted",l.runHlp,!1),window.removeEventListener("DOMContentLoaded",l.runHlp,!1))}},z=function(){chrome.extension.sendMessage({method:"unLoad",id:Eventing.contextId,topframe:Eventing.topframe,url:window.location.origin+window.location.pathname,params:window.location.search+window.location.hash},function(a){});try{Eventing.cleanup(),l.cleanupHlp()}catch(b){console.log("cleanup: Error: "+
b.message)}window.removeEventListener("DOMContentLoaded",E,!1);window.removeEventListener("DOMNodeInserted",F,!1);window.removeEventListener("unload",z,!1);null!=s?(s.finalize(),s=null):console.log("content: Warning: multiple unload events detected!!!")},H=function(b,a,c){if(!q)return window.setTimeout(function(){H(b,a,c)},10),!0;if(x){var d=f.getResponseId(c);n.onContentRequest(b,a,d)}else"getSrc"==b.method?c({src:m.getSource(document)}):"reload"==b.method?window.location.reload():"confirm"==b.method?
window.setTimeout(function(){var a=confirm(b.msg);c({confirm:a})},100):"showMsg"==b.method&&window.setTimeout(function(){window.setTimeout(function(){alert(b.msg)},1);c({})},100);return!0},P=2,Q=function(){D&&console.debug("content: create test XHR to check whether webRequest API is working");var b=function(a){a.webRequest&&(_webRequest=a.webRequest,w.setWebRequest(_webRequest))};K({method:"GET",url:"http://tampermonkey.net/empty.html",headers:{Referer:"http://doesnt.matter.com"}},{ondone:function(){chrome.extension.sendMessage({method:"getWebRequestInfo",
id:Eventing.contextId},b)}})},A=1,I=function(){try{t="("+Registry.getRaw("emulation.js")+")();\n",u="("+Registry.getRaw("environment.js")+")();\n"}catch(b){}n.id=m.createUUID();window.addEventListener("unload",z,!1);window.addEventListener("DOMContentLoaded",E,!1);window.addEventListener("DOMNodeInserted",F,!1);chrome.extension.onMessage.addListener(H);chrome.extension.sendMessage({method:"prepare",id:n.id,raw:[],topframe:Eventing.topframe,url:window.location.origin+window.location.pathname,params:window.location.search+
window.location.hash},function(a){void 0===a?(D&&console.debug("content: _early_ execution, connection to bg failed -> retry!"),window.setTimeout(I,A),A*=2):(v=a.logLevel,D|=60<=v,a.enabledScriptsCount?(g.proxy=a.unsafeWindow,"native"!==g.proxy&&(g.proxy="sandbox"),g.safeContext&="native"===g.proxy,g.safeContext&&(M(window),"native"===g.proxy&&(window.unsafeWindow=window,B.RUNTIME.NEED_UNSAFEWINDOW_PROXY&&console.warn("content: Chrome >= 27 detected! Tampermonkey needs a special Chrome option to be set. Visit http://tampermonkey.net/faq#Q404 for more infos."))),
O(),N(),f.sendMessage(),Eventing.init(n.id),D&&console.log("content: Started ("+Eventing.contextId+", "+window.location.origin+window.location.pathname+")"),q&&f.sendMessage("TMwin.adjustLogLevel("+v+");\n"),D&&console.log("content: start event processing for "+Eventing.contextId+" ("+a.enabledScriptsCount+" to run)"),x=!0,a.webRequest&&(_webRequest=a.webRequest,w.setWebRequest(_webRequest),_webRequest.headers&&!_webRequest.verified&&0<P--&&Q()),l.runHlp()):(D&&console.log("content: disable event processing for "+
Eventing.contextId),l.cleanupHlp(),z(),x=!1,q=!0))})};I()}})();
